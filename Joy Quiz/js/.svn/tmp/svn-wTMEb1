
var MagneticPoetry = {
  MP_PAGE_ID: 'wconflict_02'
};
    
function quizPath(id, answer){
    var ans = (answer) ? 'yes':'no',
        step = id + '_'+ ans,
        questionArray = document.querySelectorAll('#activities > div');

    switch(step){
        case "q1_yes" :
                choice(questionArray[1].id	, null, 'activate');
                activateArrow([0])
            break
        case "q2_yes" :
                choice(questionArray[3].id	, null, 'activate');
                activateArrow([3])
            break
        case "q3_yes" :
                choice(questionArray[4].id	, null, 'activate');
                activateArrow([5])
            break
        case "q4_yes" :
                choice(questionArray[5].id	, null, 'activate');
                activateArrow([6])
            break
        case "q5_yes" :
                choice(questionArray[7].id	, null, 'activate');
                activateArrow([7,8])
            break
        case "q6_yes" :
                choice('diplomat', null, 'activate');
                activateArrow([8,9,10,11,12]);                
            break
        case "q7_yes" :
                choice('smiler', null, 'activate');
                activateArrow([9,10,11,12])
            break
        case "q8_yes" :
                choice('stoner', null, 'activate');
                activateArrow([10,11,12])
            break
        case "q9_yes" :
                choice(questionArray[10].id, null, 'activate');
                activateArrow([11])
            break
        case "q10_yes" :
                choice('boxer', null, 'activate');
                activateArrow([12])
            break
        case "q11_yes" :
                choice('boxer', null, 'activate');
            break
        case "q1_no" :
                choice(questionArray[2].id	, null, 'activate');
                activateArrow([1]);                
            break
        case "q2_no" :
                choice(questionArray[2].id	, null, 'activate');
                activateArrow([2])
            break
        case "q3_no" :
                choice(questionArray[3].id	, null, 'activate');
                activateArrow([4]);                
            break
        case "q4_no" :
                choice(questionArray[6].id	, null, 'activate');
                activateArrow([6,7]);                
            break
        case "q5_no" :
                choice(questionArray[8].id	, null, 'activate');  
                activateArrow([7,8,9])      
            break
        case "q6_no" :
                choice(questionArray[8].id	, null, 'activate');
                activateArrow([8,9])
            break
        case "q7_no" :
                choice(questionArray[8].id	, null, 'activate');
                activateArrow([9]);                
            break
        case "q8_no" :
                choice(questionArray[9].id	, null, 'activate');
                activateArrow([10]);             
            break
        case "q9_no" :
                choice('smiler', null, 'activate');
                activateArrow([11,12]);                
            break
        case "q10_no" :
                choice('stoner', null, 'activate');
                activateArrow([12])
            break
        case "q11_no" :
                choice('diplomat', null, 'activate');
            break
    }
}	

function handler () {
	var currQuestion = this.id.split('_'),
		sibBtn;
	if (currQuestion[1] === 'no'){
		sibBtn = document.querySelector('#'+ currQuestion[0] + "_yes").className = 'yes_button_dis';
		this.className = 'no_button_on';
		
		choice(currQuestion[0], false, true);
	}
	else {
		sibBtn = document.querySelector('#'+ currQuestion[0] + "_no").className = 'no_button_dis';
		this.className = 'yes_button_on';
		choice(currQuestion[0], true, true);
	}
}
    
function choice(elem, bool, curr){
    var answeredQuestion = document.querySelector('#'+ elem),
        questionArray = document.querySelectorAll('#activities > div'),
        arrowArray = document.querySelectorAll('.hiddenArrow'),
        qlen = questionArray.length,
        arrLen = arrowArray.length;
    

    if(elem.indexOf('q') > -1){
    
        (function (el){ // Reset questions and arrow visibility after current question
            var el = el.split('q');
            var stopPoint = 0;
            var int = parseInt(el[1]);

            switch(int){
                case 1:
                    arrowArray[0].style.visibility = 'hidden';
                    break
                case 2:
                    stopPoint = 1;
                    break
                case 3:
                    stopPoint = 3;
                    break
                case 4:
                    stopPoint = 6;
                    break
                case 5:
                    stopPoint = 5;
                    break
                case 6:
                case 7:
                    stopPoint = 9;
                    break
                case 8:
                    stopPoint = 10;
                    break
                case 9:
                    stopPoint = 11;
                    break
                case 10:
                    stopPoint = 12;
                    break
                case 11:
                    stopPoint = 13;
                    break
                
            }
            
            for(var i = parseInt(el[1]); i<qlen; i++){
                questionArray[i].className = 'question';
                questionArray[i].querySelectorAll('div')[0].removeEventListener('click', handler, false);
              //  questionArray[i].querySelectorAll('div')[0].className = 'yes_button_off';
                questionArray[i].querySelectorAll('div')[1].removeEventListener('click', handler, false);
               // questionArray[i].querySelectorAll('div')[1].className = 'no_button_off';
            }
            
            
            for(var i=arrLen-1; i>stopPoint; i--){
                arrowArray[i].style.visibility = 'hidden';
            }
            for(var i = 0; i < 4; i++){
                document.querySelectorAll('#results div')[i].className = 'hideResult'; // Hide result descriptions
            }
        })(elem);
        
        switch(curr){
            case 'activate':
                answeredQuestion.className = 'question_on';
                answeredQuestion.querySelectorAll('div')[0].addEventListener('click', handler, false);
                answeredQuestion.querySelectorAll('div')[1].addEventListener('click', handler, false);
                break
            case true:
                answeredQuestion.className = 'question_answered';
                break
        }
    }
    else {
        switch(elem){
            case 'diplomat':
                document.querySelector('#diplomat').className = 'showResult';
                break
            case 'smiler':
                document.querySelector('#smiler').className = 'showResult';
                break
            case 'stoner':
                document.querySelector('#stoner').className = 'showResult';
                break
            case 'boxer':
                document.querySelector('#boxer').className = 'showResult';
                break
        }
    }
    
    if(curr === true){
        quizPath(answeredQuestion.id, bool);
    }
}
function activateArrow(pos){
    var len = pos.length;
    var arr = document.querySelectorAll('.hiddenArrow');
    for(var i = 0; i<len; i++){
        arr[pos[i]].style.visibility = 'visible';
    }
}

function getPageData(val) {
    var url = 'sm://getpagedata/' + encodeURIComponent(JSON.stringify(val));
    window.location.href = url;
}

function savePageData(val) {
    var url = 'sm://savepagedata/' + encodeURIComponent(JSON.stringify(val));
    window.location.href = url; 
}

function didBecomeInvisible() {

  var PageData  = {
              pageId: '',
              val: {}
          };

  PageData.pageId = 'wconflict_02';    
  PageData.val = document.body.innerHTML;    
  
  savePageData(PageData);
}

function loadDataForPage(obj){
  try{    
    if (obj && ("val" in obj) && !loaded){    
        document.body.innerHTML = obj.val;    
        loaded = true;
    }else{
        document.body.innerHTML = bodyHTML;
    }
  }catch(err){
      alert(err.message);
  }
}

function resetF(){
    var qArray = document.querySelectorAll('#activities > .question_answered');
    var arrowArray = document.querySelectorAll('.hiddenArrow');
    var len = qArray.length;


    qArray[0].className = 'question_on';
    qArray[0].querySelectorAll('div')[0].className = 'no_button_start';
    qArray[0].querySelectorAll('div')[1].className = 'yes_button_start';
    
    for(var i = 1; i<len; i++){
        qArray[i].className = 'question';
        qArray[i].querySelectorAll('div')[0].className = 'no_button_off';
        qArray[i].querySelectorAll('div')[1].className = 'yes_button_off';
    }
    for(var i = 0; i < 13; i++){
        arrowArray[i].style.cssText=''; // Reset visibility of progress arrows
    }
    
    btn[0].addEventListener('click', handler, false);
    btn[1].addEventListener('click', handler, false);
    
    for(var i = 0; i < 4; i++){
        document.querySelectorAll('#results div')[i].className = 'hideResult'; // Hide result descriptions
    }
        
    // ***** Start Save functionality on Reset *****     
        var PageData  = {
            pageId: '',
            val: {}
        };
    
        document.body.innerHTML = bodyHTML;
        
        PageData.pageId = 'wconflict_02';    
        PageData.val = document.body.innerHTML;    
        
        savePageData(PageData);
    
    // ***** End Save functionality on Reset *****     
}


function save(){
    var PageData  = {
              pageId: '',
              val: {}
          },
      params = [];
    
    PageData.pageId = MagneticPoetry.MP_PAGE_ID;    
    PageData.val = document.body.innerHTML;    
    
    savePageData(PageData);
}