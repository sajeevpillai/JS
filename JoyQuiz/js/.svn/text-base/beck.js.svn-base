  function textCounter(e, theField, maxChars, maxLines, maxPerLine){
  	var strTemp = "";
  	var strLineCounter = 0;
  	var strCharCounter = 0;
  	var bStatus = true;

  	for (var i = 0; i < theField.value.length; i++){
  		var strChar = theField.value.substring(i, i + 1);

  		if (strChar == '\n'){
  			strTemp += strChar;
  			strCharCounter = 1;
  			strLineCounter += 1;
  		}
  		else if (strCharCounter == maxPerLine)
  		{
  			strTemp += '\n' + strChar;
  			strCharCounter = 1;
  			strLineCounter += 1;
  		}	
  		else{
  			strTemp += strChar;
  			strCharCounter ++;
  		}
  	}

    if ((e.keyCode == 13) && (strLineCounter >= (maxLines - 1))){
      return false;
    }

    if ((maxLines - strLineCounter) == 0){
      theField.value = theField.value.substring(0, theField.value.length-1); 
    }

    return bStatus;
  }

  function getPageData(val) {
      var url = 'sm://getpagedata/' + encodeURIComponent(JSON.stringify(val));
      window.location.href = url;
  }

  function savePageData(val) {
      var url = 'sm://savepagedata/' + encodeURIComponent(JSON.stringify(val));
      window.location.href = url; 
  }
  

  function onSave(e, page_id){
      var PageData  = {
                pageId: '',
                val: {}
            };
      PageData.pageId = page_id;

      var inputs = document.getElementsByName('inputs');
      for (i=0; i<inputs.length; i++){
            PageData.val[inputs[i].id] = inputs[i].value;
      }  
      savePageData(PageData);
      blurInput(page_id);
      e.stopPropagation();
  }
  
  function onClear(e, note_id, page_id){
      var i=0;
        PageData  = {
              pageId: '',
              val: {}
          };
      PageData.pageId = page_id;
            
      /* clear out the values of the specific note that needs to be cleared */
      var note_inputs = document.getElementById(note_id).getElementsByTagName('textarea');
      for (i=0; i<note_inputs.length; i++){
            PageData.val[note_inputs[i].id] = "";
            document.getElementById(note_inputs[i].id).value = " ";
      }
      
      /* collect all the input values and store it in page data */
      var inputs = document.getElementsByName('inputs');
      for (i=0; i<inputs.length; i++){
            PageData.val[inputs[i].id] = inputs[i].value;
      }      
      savePageData(PageData);
      blurInput(page_id);
      e.stopPropagation();
  }
  
  
  var loaded = false;
  function loadDataForPage(obj){
    try{
      var inputs = document.getElementsByName('inputs');
      if (obj && ("val" in obj) && !loaded){
            for (i=0; i<inputs.length; i++){
                  document.getElementById(inputs[i].id).value = obj.val[inputs[i].id];
            }
            loaded = true;
      }else{
            for (i=0; i<inputs.length; i++){
                  document.getElementById(inputs[i].id).value = " ";
            }
      }

    }catch(err){
      alert(err.message);
    }
  }  
  
  function blurInput(page_id){
      var inputs = document.getElementsByName('inputs');
      for (i=0; i<inputs.length; i++){
            inputs[i].blur();
      }
  }
